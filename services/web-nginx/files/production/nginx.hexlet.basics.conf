upstream hexlet_basics_backend {
  server localhost:3000;
}

server {
  listen      8080;
  server_name "";
  return      200;
}

server {
  listen      8080;
  server_name "~^www\.(.*)$";
  return      301 https://$1$request_uri;
}

server {
  listen         8080;
  server_name    code-basics.ru;
  rewrite ^ https://ru.code-basics.com$request_uri permanent;
}

server {
  listen      8080;
  server_name code-basics.com ru.code-basics.com;

  client_max_body_size 10M;
  keepalive_timeout   620s;
  charset UTF-8;

  include /etc/nginx/gzip.conf;

#   auth_basic "Restricted Content";
#   auth_basic_user_file /etc/nginx/.htpasswd;

  rewrite ^\/languages\/(?<language_slug>.+)\/modules\/(?<module_slug>.+)\/lessons\/(?<lesson_slug>.+) https://$server_name/languages/$language_slug/lessons/$lesson_slug permanent;

  location ~ ^/(assets|packs)/ {
    expires max;
    add_header Cache-Control public;

    add_header 'Access-Control-Allow-Origin' '*';

    if ($http_origin ~* https:\/\/(\w+\.)?code-basics\.com$){
      add_header Access-Control-Allow-Origin $http_origin;
    }


    proxy_redirect off;
    proxy_pass_header Cookie;
    proxy_ignore_headers Set-Cookie;
    proxy_hide_header Set-Cookie;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto 'https';
    proxy_set_header X-Real-IP $remote_addr;
    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;

    proxy_pass http://hexlet_basics_backend;
  }


  try_files $uri @app;
  location @app {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Тоже кажется левые заголовки
    proxy_set_header X-Forwarded-Proto 'https';
    proxy_set_header X-Forwarded-Port '443';
    proxy_set_header X-Real-IP $remote_addr;
    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;

    proxy_redirect off;

    proxy_pass http://hexlet_basics_backend;
    proxy_buffers 16 32k;
  }

}
